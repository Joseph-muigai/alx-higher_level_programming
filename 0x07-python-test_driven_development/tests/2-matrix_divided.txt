==============================
How to Use 2-matrix_divided.py 
==============================

``matrix_divided() ``  that divides all elements of a matrix and returns a new array.
::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided(12,23)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    >>> matrix_divided([[1,2,'oyah'],[4,5,'vipi']],1)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row must  be the same size otherwise raise a TypeError
::

    >>> matrix_divided([[5,6,7,9],[1,3]],5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

Div must be a number (integer or float), otherwise raise a TypeError
::

    >>> matrix_divided([[5,6,7],[1,2,3]],'oyah')
    Traceback (most recent call last):
    TypeError: div must be a number

Div canâ€™t be equal to 0, otherwise raise a ZeroDivisionError
::

    >>> matrix_divided([[5,6,7],[1,2,3]],0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

All elements of the matrix should be divided by div, rounded to 2 decimal places.

::

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]